version: "3.9"

services:
  backend:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=sakifarm_ecommerce
      - JWT_SECRET=${JWT_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - MPESA_CONSUMER_KEY=${MPESA_CONSUMER_KEY}
      - MPESA_CONSUMER_SECRET=${MPESA_CONSUMER_SECRET}
      - MPESA_SHORTCODE=${MPESA_SHORTCODE}
      - MPESA_PASSKEY=${MPESA_PASSKEY}
      - AIRTEL_CLIENT_ID=${AIRTEL_CLIENT_ID}
      - AIRTEL_CLIENT_SECRET=${AIRTEL_CLIENT_SECRET}
    volumes:
      - uploads_data:/root/uploads
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: sakifarm_ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sakifarm_ecommerce"]
      timeout: 5s
      retries: 5
      interval: 10s
    networks:
      - app-network

volumes:
  postgres_data:
  uploads_data:

networks:
  app-network:
    driver: bridge
